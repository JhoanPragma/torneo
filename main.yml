name: CI/CD AWS Serverless

on:
  push:
    branches:
      - main

jobs:
  # 1. Job para desplegar la infraestructura con Terraform
  terraform_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0 
          
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve

  # 2. Job para desplegar el código de las Lambdas (depende del job de Terraform)
  lambda_deploy:
    needs: terraform_deploy # Solo se ejecuta si la infraestructura se creó correctamente
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Define las Lambdas a desplegar y sus rutas
        service:
          - name: crear-torneo-lambda
            path: lambdas/torneos
          - name: ventas-lambda
            path: lambdas/ventas
          - name: qr-generator-lambda
            path: lambdas/qr-generator
          - name: notificaciones-lambda
            path: lambdas/notificaciones

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies and package code (${{ matrix.service.name }})
        run: |
          # Navega a la carpeta del microservicio
          cd ${{ matrix.service.path }}
          # Instala dependencias para producción
          npm install --production
          # Empaqueta el código en un ZIP
          zip -r ../../${{ matrix.service.name }}.zip .
          cd ../../

      - name: Deploy to AWS Lambda (${{ matrix.service.name }})
        run: |
          # Sube el archivo ZIP a la función Lambda ya creada por Terraform
          aws lambda update-function-code \
            --function-name ${{ matrix.service.name }} \
            --zip-file fileb://${{ matrix.service.name }}.zip